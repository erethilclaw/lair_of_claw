security:
    encoders:
        App\Entity\User: bcrypt
    providers:
        database:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
         #- { path: ^/api/login, roles: IS_AUTHENTICATHED_ANONYMOUSLY }
         #- { path: ^/api,       roles: ROLE_USER }
         #- { path: ^/api,       roles: IS_AUTHENTICATHED_FULLY }
         - { path: ^/api,       roles: IS_AUTHENTICATHED_ANONYMOUSLY }
         #- { path: ^/admin, roles: ROLE_ADMIN }
         #- { path: ^/profile, roles: ROLE_USER }
    role_hierarchy:
        ROLE_WRITER: ROLE_COMMENTATOR
        ROLE_ADMIN: [ROLE_EDITOR, ROLE_WRITER]
        ROLE_SUPERADMIN: ROLE_ADMIN
